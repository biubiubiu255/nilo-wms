<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nilo.wms.dao.flux.FluxInventoryDao">


    <!-- 实体bean与数据字段对应关系 -->
    <resultMap id="storageInfo" type="com.nilo.wms.dto.StorageInfo">
        <result property="sku" column="sku" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result property="storage" column="storage" javaType="java.lang.Integer"
                jdbcType="INTEGER"/>
        <result property="safeStorage" column="safe_storage" javaType="java.lang.Integer"
                jdbcType="VARCHAR"/>
        <result property="storeId" column="store_Id" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
    </resultMap>

    <select id="queryBy" resultMap="storageInfo">


        SELECT *
        FROM (SELECT tt.*, ROWNUM AS rowno
        FROM ( SELECT nvl(B.SKU_GROUP7,'') as store_id,
        a.sku as sku,
        nvl(b.ReservedField03,0) as safe_storage,
        SUM(A.QTY - A.QTYALLOCATED - A.QTYONHOLD - A.QTYMVIN - A.QTYMVOUT) as storage
        from inv_lot_loc_id a
        LEFT JOIN BAS_SKU B
        ON A.SKU = B.SKU and b.customerid=a.customerid
        LEFT JOIN INV_LOT_ATT D
        ON d.lotnum=a.lotnum
        LEFT JOIN VIEW_MULTIWAREHOUSE C
        ON A.LOCATIONID = C.LOCATIONID
        LEFT JOIN BAS_LOCATION E ON E.LOCATIONID=A.LOCATIONID
        WHERE D.LOTATT08 = 'N'
        and E.PICKZONE in ('KE010101','KE010102') AND A.LOCATIONID NOT IN ('STAGEKE01','SORTATIONKE01')
        <if test="param.customerId !=null and param.customerId !='' ">
            and a.customerid = #{param.customerId}
        </if>
        <if test="param.warehouseId !=null and param.warehouseId !='' ">
            and c.warehouseid = #{param.warehouseId}
        </if>
        <if test="param.sku !=null and param.sku.size() > 0">
            and a.sku in
            <foreach collection="param.sku" item="s" index="index"
                     open="(" close=")" separator=",">
                #{s}
            </foreach>
        </if>
        <if test="param.storeId !=null and param.storeId.size() > 0">
            and B.SKU_GROUP7 in
            <foreach collection="param.storeId" item="t" index="index"
                     open="(" close=")" separator=",">
                #{t}
            </foreach>
        </if>
        group by B.SKU_GROUP7,a.sku,b.ReservedField03
        order by SUM(A.QTY - A.QTYALLOCATED - A.QTYONHOLD - A.QTYMVIN - A.QTYMVOUT) desc ) tt
        WHERE <![CDATA[ROWNUM <= #{param.end} ]]>  ) table_alias
        WHERE table_alias.rowno >= #{param.offset}
    </select>

    <select id="queryCountBy" resultType="java.lang.Integer">
        SELECT count( distinct a.sku)
        from inv_lot_loc_id a
        LEFT JOIN BAS_SKU B
        ON A.SKU = B.SKU and b.customerid=a.customerid
        LEFT JOIN INV_LOT_ATT D
        ON d.lotnum=a.lotnum
        LEFT JOIN VIEW_MULTIWAREHOUSE C
        ON A.LOCATIONID = C.LOCATIONID
        LEFT JOIN BAS_LOCATION E ON E.LOCATIONID=A.LOCATIONID
        WHERE D.LOTATT08 = 'N'
        and E.PICKZONE in ('KE010101','KE010102') AND A.LOCATIONID NOT IN ('STAGEKE01','SORTATIONKE01')
        <if test="param.customerId !=null and param.customerId !='' ">
            and a.customerid = #{param.customerId}
        </if>
        <if test="param.warehouseId !=null and param.warehouseId !='' ">
            and c.warehouseid = #{param.warehouseId}
        </if>
        <if test="param.sku !=null and param.sku.size() > 0">
            and a.sku in
            <foreach collection="param.sku" item="s" index="index"
                     open="(" close=")" separator=",">
                #{s}
            </foreach>
        </if>
        <if test="param.storeId !=null and param.storeId.size() > 0">
            and B.SKU_GROUP7 in
            <foreach collection="param.storeId" item="t" index="index"
                     open="(" close=")" separator=",">
                #{t}
            </foreach>
        </if>
    </select>


    <update id="updateSafeQty">
        update bas_sku set ReservedField03 =#{safeQty} where customerId = #{customerId} and sku=#{sku}
    </update>
</mapper>