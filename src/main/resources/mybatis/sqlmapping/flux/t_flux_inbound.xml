<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nilo.wms.dao.flux.FluxInboundDao">

    <!-- 实体bean与数据字段对应关系 -->
    <resultMap id="inbound" type="com.nilo.wms.dto.flux.FluxInbound">
        <result property="wmsAsnNo" column="asnno" javaType="java.lang.String"
                jdbcType="VARCHAR" />
        <result property="referenceNo" column="asnreference1" javaType="java.lang.String"
                jdbcType="VARCHAR" />
        <result property="status" column="asnstatus" javaType="java.lang.Integer"
                jdbcType="VARCHAR" />
    </resultMap>

    <resultMap id="details" type="com.nilo.wms.dto.flux.FluxInboundDetails">
        <result property="clientCode" column="customer_code" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result property="referenceNo" column="asnno" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result property="sku" column="sku" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result property="qty" column="expected_qty" javaType="java.lang.Integer"
                jdbcType="VARCHAR"/>
        <result property="receivedQty" column="received_qty" javaType="java.lang.Integer"
                jdbcType="VARCHAR"/>
        <result property="status" column="status" javaType="java.lang.Integer"
                jdbcType="VARCHAR"/>
    </resultMap>


    <select id="queryByReferenceNo" resultMap="inbound">
        select h.asnno, h.asnreference1,h.asnstatus from doc_asn_header h where h.customerid=#{customerId} and h.asnreference1=#{referenceNo}
    </select>

    <select id="queryDetailsByAsnNo" resultMap="details">
        select d.sku,d.expectedqty expected_qty,nvl(d.receivedqty,0) received_qty ,d.linestatus status from doc_asn_details d
        where d.customerid=#{customerId} and d.asnno=#{referenceNo}
    </select>

    <select id="queryNotCompleteDetail" resultMap="details">
        SELECT
            a.customer_code,
            b.sku,
            b.expectedqty expected_qty,
            nvl (b.receivedqty, 0) received_qty,
            b.linestatus STATUS,
            b.asnno
        FROM
            doc_asn_header a
        INNER JOIN doc_asn_details b ON b.asnno = a.asnno
        WHERE
            a.asnstatus != 99
        AND b.linestatus != 99
    </select>

    <select id="queryNotCompleteR" resultMap="details" parameterType="java.util.Set">
        SELECT
        a.customer_code,
        b.sku,
        b.expectedqty expected_qty,
        nvl (b.receivedqty, 0) received_qty,
        b.linestatus STATUS,
        b.asnno
        FROM
        doc_asn_header a
        INNER JOIN doc_asn_details b ON b.asnno = a.asnno
        WHERE
        a.asnstatus != 99 and a.asnstatus != 90
        <!--AND b.linestatus != 99-->
        AND a.asnno in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            {item, jdbcType=VARCHAR}
        </foreach>
    </select>

</mapper>