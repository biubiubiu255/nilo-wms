<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">


    <!-- 调度任务配置 -->
    <bean autowire="no"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <!-- 通知调度 -->
                <ref bean="inboundTrigger"/>
                <ref bean="orderhandlerTrigger"/>
                <ref bean="orderreturnTrigger"/>
                <ref bean="returnmerchantTrigger"/>
                <ref bean="syncStorageTrigger"/>
                <ref bean="emailTrigger"/>
                <ref bean="safeStorageTrigger"/>
            </list>
        </property>
        <property name="autoStartup" value="true"/>
    </bean>

    <!-- 通知调度配置 begin  -->
    <bean id="inboundTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="inboundTriggerDetail"/>
        <property name="cronExpression" value="0 10 12 ? * *"/>
    </bean>

    <bean id="inboundTriggerDetail"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="inbound"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false"/>
    </bean>
    <!-- 通知调度配置 end  -->

    <!-- 通知调度配置 begin  -->
    <bean id="orderhandlerTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="orderhandlerTriggerDetail"/>
        <property name="cronExpression" value="0 20 12 ? * *"/>
    </bean>

    <bean id="orderhandlerTriggerDetail"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="orderhandler"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false"/>
    </bean>
    <!-- 通知调度配置 end  -->


    <!-- 通知调度配置 begin  -->
    <bean id="orderreturnTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="orderreturnTriggerDetail"/>
        <property name="cronExpression" value="0 30 12 ? * *"/>
    </bean>

    <bean id="orderreturnTriggerDetail"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="orderreturn"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false"/>
    </bean>
    <!-- 通知调度配置 end  -->

    <!-- 通知调度配置 begin  -->
    <bean id="returnmerchantTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="returnmerchantTriggerDetail"/>
        <property name="cronExpression" value="0 40 12 ? * *"/>
    </bean>

    <bean id="returnmerchantTriggerDetail"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="returnmerchant"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false"/>
    </bean>
    <!-- 通知调度配置 end  -->

    <!-- 通知调度配置 begin  -->
    <bean id="emailTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="emailTriggerDetail"/>
        <property name="cronExpression" value="0 50 0 ? * *"/>
    </bean>

    <bean id="emailTriggerDetail"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="emailNotify"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false"/>
    </bean>
    <!-- 通知调度配置 end  -->

    <!-- 通知调度配置 begin  -->
    <bean id="syncStorageTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="syncStorageTriggerDetail"/>
        <property name="cronExpression" value="0 55 3 ? * *"/>
    </bean>

    <bean id="syncStorageTriggerDetail"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="syncStockSchedule"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false"/>
    </bean>
    <!-- 通知调度配置 end  -->

    <!-- 通知调度配置 begin  -->
    <bean id="safeStorageTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="safeStorageTriggerDetail"/>
        <property name="cronExpression" value="0 20 1 ? * *"/>
    </bean>

    <bean id="safeStorageTriggerDetail"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="safeStorage"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false"/>
    </bean>
    <!-- 通知调度配置 end  -->

    <!-- 通知调度配置 begin  -->
    <bean id="inboundReviewsTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="inboundReviewsTriggerDetail"/>
        <property name="cronExpression" value="0 */10 * * * ?"/>
    </bean>

    <bean id="inboundReviewsTriggerDetail"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="inboundReviews"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false"/>
    </bean>
    <!-- 通知调度配置 end  -->



    <bean id="inbound"
          class="com.nilo.wms.service.scheduler.InBoundHandlerFeeScheduler"/>
    <bean id="orderhandler"
          class="com.nilo.wms.service.scheduler.OrderHandlerFeeScheduler"/>
    <bean id="orderreturn"
          class="com.nilo.wms.service.scheduler.OrderReturnHandlerFeeScheduler"/>
    <bean id="returnmerchant"
          class="com.nilo.wms.service.scheduler.ReturnMerchantHandlerFeeScheduler"/>
    <bean id="emailNotify"
          class="com.nilo.wms.service.scheduler.EmailScheduler"/>
    <bean id="syncStockSchedule"
          class="com.nilo.wms.service.scheduler.SyncStockSchedule"/>
    <bean id="safeStorage"
          class="com.nilo.wms.service.scheduler.SafeStockSchedule"/>
    <bean id="inboundReviews"
          class="com.nilo.wms.service.scheduler.InBoundReviewsScheduler"/>


    <!-- 通知调度配置 end  -->

</beans>

